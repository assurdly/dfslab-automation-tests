{"uid":"867920bb0c680cd6","name":"Total Events Count - Empty Fields","fullName":"Assurdly | Government APIs/Events Records#Total Events Count - Empty Fields","historyId":"badb4daf9540eb3299c2e6230888441f:afab4bde996410008aaf239e3626f3c8","time":{"start":1748026142053,"stop":1748026142268,"duration":215},"status":"failed","statusMessage":"Status code is 400, Response is a non-empty object with number values","statusTrace":"Response code: 200, status: OK","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Response is a non-empty object with number values","statusTrace":"Response code: 200, status: OK","steps":[{"name":"Status code is 400","time":{"start":1748026142265,"stop":1748026142265,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 200","statusTrace":"AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:46)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response is a non-empty object with number values","time":{"start":1748026142266,"stop":1748026142266,"duration":0},"status":"failed","statusMessage":"expected {} not to be empty","statusTrace":"AssertionError: expected {} not to be empty\n   at Object.eval sandbox-script.js:2:46)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"ea78f0decd7c9e6","name":"PreRequest","source":"ea78f0decd7c9e6.txt","type":"text/plain","size":1612},{"uid":"7492fb8762ab7d5","name":"ConsoleLogs","source":"7492fb8762ab7d5.txt","type":"text/plain","size":207},{"uid":"92fb4be0d2e7b919","name":"Request Headers","source":"92fb4be0d2e7b919.json","type":"application/json","size":9972},{"uid":"9a91bd30a388b97b","name":"Request Body","source":"9a91bd30a388b97b.txt","type":"text/plain","size":114},{"uid":"a05c9a9a2e925d7f","name":"Response Headers","source":"a05c9a9a2e925d7f.json","type":"application/json","size":323},{"uid":"ccf8092fbf10b466","name":"Response Body","source":"ccf8092fbf10b466.txt","type":"text/plain","size":2}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"pid-2444-worker-main"},{"name":"parentSuite","value":"Assurdly | Government APIs"},{"name":"suite","value":"Events Records"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://demo.dfqt.org/dashboard-api/shared/get-producer-total_eventscount"},{"name":"Response Code","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"867920bb0c680cd6.json","parameterValues":["POST - https://demo.dfqt.org/dashboard-api/shared/get-producer-total_eventscount","200"]}