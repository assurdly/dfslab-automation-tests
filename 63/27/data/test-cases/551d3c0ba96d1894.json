{"uid":"551d3c0ba96d1894","name":"Total Events Count - Empty Fields","fullName":"Assurdly | Government APIs/Events Records#Total Events Count - Empty Fields","historyId":"badb4daf9540eb3299c2e6230888441f:afab4bde996410008aaf239e3626f3c8","time":{"start":1749063037670,"stop":1749063037900,"duration":230},"status":"failed","statusMessage":"Status code is 400, Response is a non-empty object with number values","statusTrace":"Response code: 200, status: OK","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Response is a non-empty object with number values","statusTrace":"Response code: 200, status: OK","steps":[{"name":"Status code is 400","time":{"start":1749063037897,"stop":1749063037897,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 200","statusTrace":"AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:46)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response is a non-empty object with number values","time":{"start":1749063037897,"stop":1749063037897,"duration":0},"status":"failed","statusMessage":"expected {} not to be empty","statusTrace":"AssertionError: expected {} not to be empty\n   at Object.eval sandbox-script.js:2:46)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"dccc92bdfac4b133","name":"PreRequest","source":"dccc92bdfac4b133.txt","type":"text/plain","size":1612},{"uid":"fb8989a63aad0661","name":"ConsoleLogs","source":"fb8989a63aad0661.txt","type":"text/plain","size":207},{"uid":"50505efe4293ed9","name":"Request Headers","source":"50505efe4293ed9.json","type":"application/json","size":9972},{"uid":"6188a4ad26bb1e72","name":"Request Body","source":"6188a4ad26bb1e72.txt","type":"text/plain","size":114},{"uid":"f89ae5a239d56003","name":"Response Headers","source":"f89ae5a239d56003.json","type":"application/json","size":323},{"uid":"752fa7cf8e318116","name":"Response Body","source":"752fa7cf8e318116.txt","type":"text/plain","size":2}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"pid-2453-worker-main"},{"name":"parentSuite","value":"Assurdly | Government APIs"},{"name":"suite","value":"Events Records"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://demo.dfqt.org/dashboard-api/shared/get-producer-total_eventscount"},{"name":"Response Code","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"551d3c0ba96d1894.json","parameterValues":["POST - https://demo.dfqt.org/dashboard-api/shared/get-producer-total_eventscount","200"]}