{"uid":"c78be94dfee4cf42","name":"Total Events Count - Empty Fields","fullName":"Assurdly | Government APIs/Events Records#Total Events Count - Empty Fields","historyId":"badb4daf9540eb3299c2e6230888441f:afab4bde996410008aaf239e3626f3c8","time":{"start":1747248529697,"stop":1747248529925,"duration":228},"status":"failed","statusMessage":"Status code is 400, Response is a non-empty object with number values","statusTrace":"Response code: 200, status: OK","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Response is a non-empty object with number values","statusTrace":"Response code: 200, status: OK","steps":[{"name":"Status code is 400","time":{"start":1747248529922,"stop":1747248529922,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 200","statusTrace":"AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:46)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response is a non-empty object with number values","time":{"start":1747248529922,"stop":1747248529922,"duration":0},"status":"failed","statusMessage":"expected {} not to be empty","statusTrace":"AssertionError: expected {} not to be empty\n   at Object.eval sandbox-script.js:2:46)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"af43ba8ea4aaee2c","name":"PreRequest","source":"af43ba8ea4aaee2c.txt","type":"text/plain","size":1612},{"uid":"39818f4443de14bb","name":"ConsoleLogs","source":"39818f4443de14bb.txt","type":"text/plain","size":207},{"uid":"50990cac90cfa3be","name":"Request Headers","source":"50990cac90cfa3be.json","type":"application/json","size":9972},{"uid":"7ed5949989543f1e","name":"Request Body","source":"7ed5949989543f1e.txt","type":"text/plain","size":114},{"uid":"dadd5347afdc4b1d","name":"Response Headers","source":"dadd5347afdc4b1d.json","type":"application/json","size":323},{"uid":"70c3fa6acb22aa2a","name":"Response Body","source":"70c3fa6acb22aa2a.txt","type":"text/plain","size":2}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"pkrvmberfyhpb9w"},{"name":"thread","value":"pid-2457-worker-main"},{"name":"parentSuite","value":"Assurdly | Government APIs"},{"name":"suite","value":"Events Records"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://demo.dfqt.org/dashboard-api/shared/get-producer-total_eventscount"},{"name":"Response Code","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c78be94dfee4cf42.json","parameterValues":["POST - https://demo.dfqt.org/dashboard-api/shared/get-producer-total_eventscount","200"]}