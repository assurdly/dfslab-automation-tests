{"uid":"671159f3475ca1f0","name":"Get Product Instance - Invalid Request (missing or incomplete field)","fullName":"Assurdly | Receiver API/Product Instances#Get Product Instance - Invalid Request (missing or incomplete field)","historyId":"dfe5f92e6b45b2e4111b1133f728906e:7a85cea52572c67f1f242960341ebcc6","time":{"start":1744371998731,"stop":1744371998951,"duration":220},"status":"failed","statusMessage":"Status code is 400","statusTrace":"Response code: 200, status: OK","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400","statusTrace":"Response code: 200, status: OK","steps":[{"name":"Status code is 400","time":{"start":1744371998947,"stop":1744371998947,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 200","statusTrace":"AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:18)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response is valid and Each Data item contains required fields and valid values","time":{"start":1744371998949,"stop":1744371998949,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"7299883951808224","name":"PreRequest","source":"7299883951808224.txt","type":"text/plain","size":1612},{"uid":"53b82253a6f723b2","name":"ConsoleLogs","source":"53b82253a6f723b2.txt","type":"text/plain","size":153},{"uid":"687b607051b7352","name":"Request Headers","source":"687b607051b7352.json","type":"application/json","size":8915},{"uid":"2e1c76347e5615b4","name":"Request Body","source":"2e1c76347e5615b4.txt","type":"text/plain","size":161},{"uid":"bba7ba0178eeb18a","name":"Response Headers","source":"bba7ba0178eeb18a.json","type":"application/json","size":328},{"uid":"1cee14d399d47389","name":"Response Body","source":"1cee14d399d47389.txt","type":"text/plain","size":1238}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az2214-35"},{"name":"thread","value":"pid-2394-worker-main"},{"name":"parentSuite","value":"Assurdly | Receiver API"},{"name":"suite","value":"Product Instances"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://demo.dfqt.org/dashboard-api/micronutrient/get-product_instance"},{"name":"Response Code","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"671159f3475ca1f0.json","parameterValues":["POST - https://demo.dfqt.org/dashboard-api/micronutrient/get-product_instance","200"]}