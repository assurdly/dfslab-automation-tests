{"uid":"da14ba4ef23c20eb","name":"Dashboard Filter - Empty Required Fields","fullName":"Assurdly | Government APIs/Dashboard/Stats#Dashboard Filter - Empty Required Fields","historyId":"8e666c3c0f151e6134fc71c556025fab:e033ae124b2426054c44ca12061af730","time":{"start":1749235788514,"stop":1749235788774,"duration":260},"status":"failed","statusMessage":"Status code is 400, Response fields have valid data types","statusTrace":"Response code: 200, status: OK","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Response fields have valid data types","statusTrace":"Response code: 200, status: OK","steps":[{"name":"Status code is 400","time":{"start":1749235788770,"stop":1749235788770,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 200","statusTrace":"AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:14)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response fields have valid data types","time":{"start":1749235788771,"stop":1749235788771,"duration":0},"status":"failed","statusMessage":"expected {} not to be empty","statusTrace":"AssertionError: expected {} not to be empty\n   at Object.eval sandbox-script.js:2:14)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b04854d4ad3c72b","name":"PreRequest","source":"b04854d4ad3c72b.txt","type":"text/plain","size":1612},{"uid":"b13d664f7a8593d0","name":"ConsoleLogs","source":"b13d664f7a8593d0.txt","type":"text/plain","size":213},{"uid":"889be9649d0039c","name":"Request Headers","source":"889be9649d0039c.json","type":"application/json","size":8942},{"uid":"2fbf65000808a8f0","name":"Request Body","source":"2fbf65000808a8f0.txt","type":"text/plain","size":130},{"uid":"93da1f08a4b5a82c","name":"Response Headers","source":"93da1f08a4b5a82c.json","type":"application/json","size":323},{"uid":"5ec0cc9cdafd0f3d","name":"Response Body","source":"5ec0cc9cdafd0f3d.txt","type":"text/plain","size":2}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"pid-2431-worker-main"},{"name":"parentSuite","value":"Assurdly | Government APIs"},{"name":"suite","value":"Dashboard"},{"name":"subSuite","value":"Stats"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://demo.dfqt.org/dashboard-api/micronutrient/get-statistics/"},{"name":"Response Code","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"da14ba4ef23c20eb.json","parameterValues":["POST - https://demo.dfqt.org/dashboard-api/micronutrient/get-statistics/","200"]}