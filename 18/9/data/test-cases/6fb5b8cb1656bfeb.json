{"uid":"6fb5b8cb1656bfeb","name":"Dashboard Filter - Empty Required Fields","fullName":"Assurdly | Government APIs/Dashboard/Stats#Dashboard Filter - Empty Required Fields","historyId":"8e666c3c0f151e6134fc71c556025fab:e033ae124b2426054c44ca12061af730","time":{"start":1745434221960,"stop":1745434222191,"duration":231},"status":"failed","statusMessage":"Status code is 400, Response fields have valid data types","statusTrace":"Response code: 200, status: OK","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Response fields have valid data types","statusTrace":"Response code: 200, status: OK","steps":[{"name":"Status code is 400","time":{"start":1745434222187,"stop":1745434222187,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 200","statusTrace":"AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:14)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response fields have valid data types","time":{"start":1745434222188,"stop":1745434222188,"duration":0},"status":"failed","statusMessage":"expected {} not to be empty","statusTrace":"AssertionError: expected {} not to be empty\n   at Object.eval sandbox-script.js:2:14)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"d2a8b06af1d7ea63","name":"PreRequest","source":"d2a8b06af1d7ea63.txt","type":"text/plain","size":1612},{"uid":"96ab5ac02b7abb91","name":"ConsoleLogs","source":"96ab5ac02b7abb91.txt","type":"text/plain","size":213},{"uid":"b5bb1bf99b21f51","name":"Request Headers","source":"b5bb1bf99b21f51.json","type":"application/json","size":8942},{"uid":"444dd5350c5784ba","name":"Request Body","source":"444dd5350c5784ba.txt","type":"text/plain","size":130},{"uid":"ced739dfbbd21c45","name":"Response Headers","source":"ced739dfbbd21c45.json","type":"application/json","size":323},{"uid":"8e2133aed43ed5da","name":"Response Body","source":"8e2133aed43ed5da.txt","type":"text/plain","size":2}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1971-638"},{"name":"thread","value":"pid-2320-worker-main"},{"name":"parentSuite","value":"Assurdly | Government APIs"},{"name":"suite","value":"Dashboard"},{"name":"subSuite","value":"Stats"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://demo.dfqt.org/dashboard-api/micronutrient/get-statistics/"},{"name":"Response Code","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"6fb5b8cb1656bfeb.json","parameterValues":["POST - https://demo.dfqt.org/dashboard-api/micronutrient/get-statistics/","200"]}