{"uid":"1c78c1e36506ec88","name":"Total Event - Empty Fields","fullName":"Assurdly | Government APIs/Events Records#Total Event - Empty Fields","historyId":"e7e07df2b43bb9d6e0fa571cb3d5ad7f:9c52a96ff7290b79e517ee08601f8a61","time":{"start":1746038919792,"stop":1746038920051,"duration":259},"description":"### Get Producer Total Events\n\nThis API endpoint is used to retrieve total events for a specific producer from the dashboard.\n\n#### Request Body\n\n- `request_type` (string, optional): Type of request.\n    \n- `product_type` (string, optional): Type of product.\n    \n- `fqs_type` (string): Type of FQS.\n    \n- `from_date` (string): Start date for the event search.\n    \n- `to_date` (string): End date for the event search.\n    \n- `product_category` (string, optional): Category of the product.\n    \n\n#### Response Body\n\nThe response is in JSON format and follows the schema below:\n\n``` json\n{\n  \"Data\": [\n    {\n      \"event_id\": \"\",\n      \"events_comments\": [\n        {\n          \"_id\": \"\",\n          \"event_id\": \"\",\n          \"comments\": \"\",\n          \"user_name\": \"\",\n          \"timestamp\": \"\"\n        }\n      ],\n      \"event_type\": \"\",\n      \"event_location\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"trading_partner\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"activity\": {\n        \"type\": \"\",\n        \"no\": \"\"\n      },\n      \"data_capture_time\": \"\",\n      \"batches\": [\n        {\n          \"type\": \"\",\n          \"manufacturer\": {\n            \"id\": \"\",\n            \"type\": \"\"\n          },\n          \"product\": {\n            \"id\": \"\",\n            \"type\": \"\"\n          },\n          \"product_instance\": {\n            \"id\": \"\",\n            \"type\": \"\"\n          }\n        }\n      ]\n    }\n  ],\n  \"Filters\": {\n    \"manufacturer\": [\n      {\n        \"value\": \"\",\n        \"label\": \"\"\n      }\n    ],\n    \"tradPartner\": [\n      {\n        \"value\": \"\",\n        \"label\": \"\"\n      }\n    ],\n    \"eventLocation\": [\n      {\n        \"value\": \"\",\n        \"label\": \"\"\n      }\n    ],\n    \"productId\": [\n      {\n        \"value\": \"\",\n        \"label\": \"\"\n      }\n    ],\n    \"activityType\": [\n      {\n        \"value\": \"\",\n        \"label\": \"\"\n      }\n    ],\n    \"activityNumber\": [\n      {\n        \"value\": \"\",\n        \"label\": \"\"\n      }\n    ],\n    \"prodInstance\": [\n      {\n        \"value\": \"\",\n        \"label\": \"\"\n      }\n    ]\n  }\n}\n\n ```","descriptionHtml":"### Get Producer Total Events<br><br>This API endpoint is used to retrieve total events for a specific producer from the dashboard.<br><br>#### Request Body<br><br>- `request_type` (string, optional): Type of request.<br>    <br>- `product_type` (string, optional): Type of product.<br>    <br>- `fqs_type` (string): Type of FQS.<br>    <br>- `from_date` (string): Start date for the event search.<br>    <br>- `to_date` (string): End date for the event search.<br>    <br>- `product_category` (string, optional): Category of the product.<br>    <br><br>#### Response Body<br><br>The response is in JSON format and follows the schema below:<br><br>``` json<br>{<br>  \"Data\": [<br>    {<br>      \"event_id\": \"\",<br>      \"events_comments\": [<br>        {<br>          \"_id\": \"\",<br>          \"event_id\": \"\",<br>          \"comments\": \"\",<br>          \"user_name\": \"\",<br>          \"timestamp\": \"\"<br>        }<br>      ],<br>      \"event_type\": \"\",<br>      \"event_location\": {<br>        \"id\": \"\",<br>        \"name\": \"\"<br>      },<br>      \"trading_partner\": {<br>        \"id\": \"\",<br>        \"name\": \"\"<br>      },<br>      \"activity\": {<br>        \"type\": \"\",<br>        \"no\": \"\"<br>      },<br>      \"data_capture_time\": \"\",<br>      \"batches\": [<br>        {<br>          \"type\": \"\",<br>          \"manufacturer\": {<br>            \"id\": \"\",<br>            \"type\": \"\"<br>          },<br>          \"product\": {<br>            \"id\": \"\",<br>            \"type\": \"\"<br>          },<br>          \"product_instance\": {<br>            \"id\": \"\",<br>            \"type\": \"\"<br>          }<br>        }<br>      ]<br>    }<br>  ],<br>  \"Filters\": {<br>    \"manufacturer\": [<br>      {<br>        \"value\": \"\",<br>        \"label\": \"\"<br>      }<br>    ],<br>    \"tradPartner\": [<br>      {<br>        \"value\": \"\",<br>        \"label\": \"\"<br>      }<br>    ],<br>    \"eventLocation\": [<br>      {<br>        \"value\": \"\",<br>        \"label\": \"\"<br>      }<br>    ],<br>    \"productId\": [<br>      {<br>        \"value\": \"\",<br>        \"label\": \"\"<br>      }<br>    ],<br>    \"activityType\": [<br>      {<br>        \"value\": \"\",<br>        \"label\": \"\"<br>      }<br>    ],<br>    \"activityNumber\": [<br>      {<br>        \"value\": \"\",<br>        \"label\": \"\"<br>      }<br>    ],<br>    \"prodInstance\": [<br>      {<br>        \"value\": \"\",<br>        \"label\": \"\"<br>      }<br>    ]<br>  }<br>}<br><br> ```","status":"failed","statusMessage":"Status code is 400","statusTrace":"Response code: 200, status: OK","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"### Get Producer Total Events\n\nThis API endpoint is used to retrieve total events for a specific producer from the dashboard.\n\n#### Request Body\n\n- `request_type` (string, optional): Type of request.\n    \n- `product_type` (string, optional): Type of product.\n    \n- `fqs_type` (string): Type of FQS.\n    \n- `from_date` (string): Start date for the event search.\n    \n- `to_date` (string): End date for the event search.\n    \n- `product_category` (string, optional): Category of the product.\n    \n\n#### Response Body\n\nThe response is in JSON format and follows the schema below:\n\n``` json\n{\n  \"Data\": [\n    {\n      \"event_id\": \"\",\n      \"events_comments\": [\n        {\n          \"_id\": \"\",\n          \"event_id\": \"\",\n          \"comments\": \"\",\n          \"user_name\": \"\",\n          \"timestamp\": \"\"\n        }\n      ],\n      \"event_type\": \"\",\n      \"event_location\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"trading_partner\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"activity\": {\n        \"type\": \"\",\n        \"no\": \"\"\n      },\n      \"data_capture_time\": \"\",\n      \"batches\": [\n        {\n          \"type\": \"\",\n          \"manufacturer\": {\n            \"id\": \"\",\n            \"type\": \"\"\n          },\n          \"product\": {\n            \"id\": \"\",\n            \"type\": \"\"\n          },\n          \"product_instance\": {\n            \"id\": \"\",\n            \"type\": \"\"\n          }\n        }\n      ]\n    }\n  ],\n  \"Filters\": {\n    \"manufacturer\": [\n      {\n        \"value\": \"\",\n        \"label\": \"\"\n      }\n    ],\n    \"tradPartner\": [\n      {\n        \"value\": \"\",\n        \"label\": \"\"\n      }\n    ],\n    \"eventLocation\": [\n      {\n        \"value\": \"\",\n        \"label\": \"\"\n      }\n    ],\n    \"productId\": [\n      {\n        \"value\": \"\",\n        \"label\": \"\"\n      }\n    ],\n    \"activityType\": [\n      {\n        \"value\": \"\",\n        \"label\": \"\"\n      }\n    ],\n    \"activityNumber\": [\n      {\n        \"value\": \"\",\n        \"label\": \"\"\n      }\n    ],\n    \"prodInstance\": [\n      {\n        \"value\": \"\",\n        \"label\": \"\"\n      }\n    ]\n  }\n}\n\n ```","descriptionHtml":"### Get Producer Total Events<br><br>This API endpoint is used to retrieve total events for a specific producer from the dashboard.<br><br>#### Request Body<br><br>- `request_type` (string, optional): Type of request.<br>    <br>- `product_type` (string, optional): Type of product.<br>    <br>- `fqs_type` (string): Type of FQS.<br>    <br>- `from_date` (string): Start date for the event search.<br>    <br>- `to_date` (string): End date for the event search.<br>    <br>- `product_category` (string, optional): Category of the product.<br>    <br><br>#### Response Body<br><br>The response is in JSON format and follows the schema below:<br><br>``` json<br>{<br>  \"Data\": [<br>    {<br>      \"event_id\": \"\",<br>      \"events_comments\": [<br>        {<br>          \"_id\": \"\",<br>          \"event_id\": \"\",<br>          \"comments\": \"\",<br>          \"user_name\": \"\",<br>          \"timestamp\": \"\"<br>        }<br>      ],<br>      \"event_type\": \"\",<br>      \"event_location\": {<br>        \"id\": \"\",<br>        \"name\": \"\"<br>      },<br>      \"trading_partner\": {<br>        \"id\": \"\",<br>        \"name\": \"\"<br>      },<br>      \"activity\": {<br>        \"type\": \"\",<br>        \"no\": \"\"<br>      },<br>      \"data_capture_time\": \"\",<br>      \"batches\": [<br>        {<br>          \"type\": \"\",<br>          \"manufacturer\": {<br>            \"id\": \"\",<br>            \"type\": \"\"<br>          },<br>          \"product\": {<br>            \"id\": \"\",<br>            \"type\": \"\"<br>          },<br>          \"product_instance\": {<br>            \"id\": \"\",<br>            \"type\": \"\"<br>          }<br>        }<br>      ]<br>    }<br>  ],<br>  \"Filters\": {<br>    \"manufacturer\": [<br>      {<br>        \"value\": \"\",<br>        \"label\": \"\"<br>      }<br>    ],<br>    \"tradPartner\": [<br>      {<br>        \"value\": \"\",<br>        \"label\": \"\"<br>      }<br>    ],<br>    \"eventLocation\": [<br>      {<br>        \"value\": \"\",<br>        \"label\": \"\"<br>      }<br>    ],<br>    \"productId\": [<br>      {<br>        \"value\": \"\",<br>        \"label\": \"\"<br>      }<br>    ],<br>    \"activityType\": [<br>      {<br>        \"value\": \"\",<br>        \"label\": \"\"<br>      }<br>    ],<br>    \"activityNumber\": [<br>      {<br>        \"value\": \"\",<br>        \"label\": \"\"<br>      }<br>    ],<br>    \"prodInstance\": [<br>      {<br>        \"value\": \"\",<br>        \"label\": \"\"<br>      }<br>    ]<br>  }<br>}<br><br> ```","status":"failed","statusMessage":"Status code is 400","statusTrace":"Response code: 200, status: OK","steps":[{"name":"Status code is 400","time":{"start":1746038920047,"stop":1746038920047,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 200","statusTrace":"AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:44)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response body and Data items are valid","time":{"start":1746038920048,"stop":1746038920048,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"e613b18138b51f57","name":"PreRequest","source":"e613b18138b51f57.txt","type":"text/plain","size":1612},{"uid":"367d62a54e9f4e32","name":"ConsoleLogs","source":"367d62a54e9f4e32.txt","type":"text/plain","size":207},{"uid":"bf55d1d5278dd05c","name":"Request Headers","source":"bf55d1d5278dd05c.json","type":"application/json","size":9972},{"uid":"9c7d2335422e9188","name":"Request Body","source":"9c7d2335422e9188.txt","type":"text/plain","size":185},{"uid":"a16b8b8133b31fbc","name":"Response Headers","source":"a16b8b8133b31fbc.json","type":"application/json","size":328},{"uid":"cc9d3c896eff63ec","name":"Response Body","source":"cc9d3c896eff63ec.txt","type":"text/plain","size":2010}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1049-692"},{"name":"thread","value":"pid-2309-worker-main"},{"name":"parentSuite","value":"Assurdly | Government APIs"},{"name":"suite","value":"Events Records"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://demo.dfqt.org/dashboard-api/shared/get-producer-total_events/"},{"name":"Response Code","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"1c78c1e36506ec88.json","parameterValues":["POST - https://demo.dfqt.org/dashboard-api/shared/get-producer-total_events/","200"]}