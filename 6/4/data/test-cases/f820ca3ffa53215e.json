{"uid":"f820ca3ffa53215e","name":"Total Events Count - Empty Fields","fullName":"Assurdly | Government APIs/Events Records#Total Events Count - Empty Fields","historyId":"badb4daf9540eb3299c2e6230888441f:afab4bde996410008aaf239e3626f3c8","time":{"start":1744544601303,"stop":1744544601538,"duration":235},"status":"failed","statusMessage":"Status code is 400, Response is a non-empty object with number values","statusTrace":"Response code: 200, status: OK","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Response is a non-empty object with number values","statusTrace":"Response code: 200, status: OK","steps":[{"name":"Status code is 400","time":{"start":1744544601535,"stop":1744544601535,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 200","statusTrace":"AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:46)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response is a non-empty object with number values","time":{"start":1744544601536,"stop":1744544601536,"duration":0},"status":"failed","statusMessage":"expected {} not to be empty","statusTrace":"AssertionError: expected {} not to be empty\n   at Object.eval sandbox-script.js:2:46)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"2bae93574f89fac8","name":"PreRequest","source":"2bae93574f89fac8.txt","type":"text/plain","size":1612},{"uid":"74595d6adb19a79f","name":"ConsoleLogs","source":"74595d6adb19a79f.txt","type":"text/plain","size":207},{"uid":"350416ac1bceee15","name":"Request Headers","source":"350416ac1bceee15.json","type":"application/json","size":8942},{"uid":"98e0f54e56782e6f","name":"Request Body","source":"98e0f54e56782e6f.txt","type":"text/plain","size":114},{"uid":"7f96b70fb2495c0e","name":"Response Headers","source":"7f96b70fb2495c0e.json","type":"application/json","size":323},{"uid":"e904942de071d32e","name":"Response Body","source":"e904942de071d32e.txt","type":"text/plain","size":2}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"fv-az1307-866"},{"name":"thread","value":"pid-2336-worker-main"},{"name":"parentSuite","value":"Assurdly | Government APIs"},{"name":"suite","value":"Events Records"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://demo.dfqt.org/dashboard-api/shared/get-producer-total_eventscount"},{"name":"Response Code","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"f820ca3ffa53215e.json","parameterValues":["POST - https://demo.dfqt.org/dashboard-api/shared/get-producer-total_eventscount","200"]}