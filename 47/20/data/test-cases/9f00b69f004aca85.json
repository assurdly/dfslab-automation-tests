{"uid":"9f00b69f004aca85","name":"Get Product Instance Shared with Government - Invalid Request (missing or incomplete field)","fullName":"Assurdly | Shipper API/Shared With Government#Get Product Instance Shared with Government - Invalid Request (missing or incomplete field)","historyId":"5009d408b2045ac9349982d8672ea768:c81c24e5d01e7831182f57334d4d581b","time":{"start":1747853276352,"stop":1747853276681,"duration":329},"status":"failed","statusMessage":"Status code is 400, Response is valid and Each Data item contains required fields and valid values, Message should fail if data was not fetched","statusTrace":"Response code: 200, status: OK","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Response is valid and Each Data item contains required fields and valid values, Message should fail if data was not fetched","statusTrace":"Response code: 200, status: OK","steps":[{"name":"Status code is 400","time":{"start":1747853276676,"stop":1747853276676,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 200","statusTrace":"AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:25)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response is valid and Each Data item contains required fields and valid values","time":{"start":1747853276677,"stop":1747853276677,"duration":0},"status":"failed","statusMessage":"expected [] not to be empty","statusTrace":"AssertionError: expected [] not to be empty\n   at Object.eval sandbox-script.js:2:25)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Message should fail if data was not fetched","time":{"start":1747853276678,"stop":1747853276678,"duration":0},"status":"failed","statusMessage":"expected false to be true","statusTrace":"AssertionError: expected false to be true\n   at Object.eval sandbox-script.js:3:25)","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"ae015587aaabfb0b","name":"PreRequest","source":"ae015587aaabfb0b.txt","type":"text/plain","size":1612},{"uid":"250034069b6806ba","name":"ConsoleLogs","source":"250034069b6806ba.txt","type":"text/plain","size":213},{"uid":"8195dbf0798771b6","name":"Request Headers","source":"8195dbf0798771b6.json","type":"application/json","size":8703},{"uid":"ba995d9c7d2bc530","name":"Request Body","source":"ba995d9c7d2bc530.txt","type":"text/plain","size":208},{"uid":"48a261c1d7eb216b","name":"Response Headers","source":"48a261c1d7eb216b.json","type":"application/json","size":326},{"uid":"3768fdfbb7f748c1","name":"Response Body","source":"3768fdfbb7f748c1.txt","type":"text/plain","size":112}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":6,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"language","value":"javascript"},{"name":"framework","value":"newman"},{"name":"host","value":"pkrvmf6wy0o8zjz"},{"name":"thread","value":"pid-2455-worker-main"},{"name":"parentSuite","value":"Assurdly | Shipper API"},{"name":"suite","value":"Shared With Government"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://demo.dfqt.org/dashboard-api/micronutrient/get-product_instance_shared_govt/"},{"name":"Response Code","value":"200"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"9f00b69f004aca85.json","parameterValues":["POST - https://demo.dfqt.org/dashboard-api/micronutrient/get-product_instance_shared_govt/","200"]}